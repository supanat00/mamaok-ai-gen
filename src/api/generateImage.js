// ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô API ‡∏à‡∏£‡∏¥‡∏á
export async function generateImageWithDalle3({ prompt }) {
  const apiKey = import.meta.env.VITE_OPENAI_API_KEY;

  if (!apiKey) {
    throw new Error("401: API Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤");
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á prompt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≠‡∏•‡πÄ‡∏õ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡∏•‡∏ß‡∏î‡∏•‡∏≤‡∏¢‡∏ã‡πâ‡∏≥‡πÜ
  const basePrompt =
    "wallpaper pattern, repeating design, continuous texture, full coverage, no borders, no seams, no gaps, dense pattern, uniform distribution, colorful, vibrant, modern design";

  const fullPrompt =
    "I NEED to test how the tool works with extremely simple prompts. DO NOT add any detail, just use it AS-IS:" +
    prompt +
    ", wallpaper pattern, repeating design, continuous texture, full coverage, no borders, no seams, no gaps, dense pattern, uniform distribution, colorful, vibrant, modern design";

  // ‡πÅ‡∏™‡∏î‡∏á prompt ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ
  console.log("üé® === PROMPT GENERATION ===");
  console.log(`üìù User Input: "${prompt}"`);
  console.log(`üéØ Base Prompt: "${basePrompt}"`);
  console.log(`‚úÖ Final Prompt: "${fullPrompt}"`);
  console.log("üé® =========================");

  const response = await fetch("https://api.openai.com/v1/images/generations", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${apiKey}`,
    },
    body: JSON.stringify({
      model: "dall-e-3",
      prompt: fullPrompt,
      n: 1,
      size: "1024x1792", // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 1024x1792 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö portrait mode
      response_format: "b64_json", // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å "url" ‡πÄ‡∏õ‡πá‡∏ô "b64_json"
    }),
  });

  if (!response.ok) {
    const errorText = await response.text();
    throw new Error(`${response.status}: ${errorText}`);
  }

  const data = await response.json();
  const base64Data = data.data[0].b64_json;

  // Convert base64 to data URL
  const dataUrl = `data:image/png;base64,${base64Data}`;
  console.log("üé® === IMAGE GENERATION COMPLETE ===");
  console.log("‚úÖ Wallpaper pattern generated successfully");
  console.log("‚úÖ Converted to data URL");
  console.log("üé® =================================");
  return dataUrl;
}

/*
// ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô mock ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
export async function generateImageWithDalle3({ prompt }) {
  // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  console.log("üîÑ Generating image with prompt:", prompt);
  await new Promise((resolve) => setTimeout(resolve, 2000));

  // ‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô URL ‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
  console.log("‚úÖ Mock image generation completed");
  return "/mockup/mockup.png";
}
*/
